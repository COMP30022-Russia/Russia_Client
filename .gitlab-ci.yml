image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"

cache:
  key: the-one-and-only
  paths:
    - .gradle/caches/
    - .gradle/wrapper/
    - android-sdk-linux/

before_script:
  # Set gradle cache directory
  - export GRADLE_USER_HOME=$PWD/.gradle
  # Remove some gradle caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -rf .gradle/caches/*/plugin-resolution/
  # Install packages
  - apt-get -qq update --yes
  - apt-get -qq install --yes wget tar unzip lib32stdc++6 lib32z1
  # Download SDK tools
  - if [ ! -d android-sdk-linux ]; then wget --quiet --output-document=android-sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip; fi
  - if [ ! -d android-sdk-linux ]; then unzip -q android-sdk-tools.zip -d android-sdk-linux; fi
  # Set path variables
  - mkdir -p $HOME/.android
  - touch ~/.android/repositories.cfg
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  # Install packages
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" > /dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-$ANDROID_COMPILE_SDK" > /dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;$ANDROID_BUILD_TOOLS" > /dev/null
  # Set up
  - chmod +x ./gradlew

stages:
  - test

build:
  stage: test
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

unitTests:
  stage: test
  script:
    - ./gradlew test
